<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<SpaProxyServerUrl>https://localhost:7116</SpaProxyServerUrl>
		<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
		<ImplicitUsings>enable</ImplicitUsings>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoMapper" Version="11.0.1" />
		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
		<PackageReference Include="FluentValidation" Version="11.1.0" />
		<PackageReference Include="FluentValidation.AspNetCore" Version="11.1.2" />
		<PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="11.1.0" />
		<PackageReference Include="MediatR" Version="10.0.1" />
		<PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="10.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.17" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.17" />
		<PackageReference Include="Microsoft.SqlServer.Server" Version="1.0.0" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\TalentLand.Trivia.Application\TalentLand.Trivia.Application.csproj" />
		<ProjectReference Include="..\TalentLand.Trivia.Domain\TalentLand.Trivia.Domain.csproj" />
		<ProjectReference Include="..\TalentLand.Trivia.Infra.Persistence\TalentLand.Trivia.Infra.Persistence.csproj" />
		<ProjectReference Include="..\TalentLand.Trivia.Infra.Shared\TalentLand.Trivia.Infra.Shared.csproj" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="Properties\PublishProfiles\" />
	  <Folder Include="Properties\ServiceDependencies\" />
	</ItemGroup>
	
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" ('$(Configuration)' == 'Debug') And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm i -g react-scripts" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm i -g tailwindcss postcss autoprefixer" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn install --force --ignore-engines" />
	</Target>
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn install --force --ignore-engines" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" />
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>
